{"version":3,"file":"static/js/8124.961bbbe5.chunk.js","mappings":"gHAAA,0iR","sources":["../../../packages/components/src/ProDrawer/README.md"],"sourcesContent":["export default \"# Drawer 抽屉\\n屏幕边缘滑出的浮层面板,集成权限button按钮。\\n\\n基于[uiw/Drawer](https://uiwjs.github.io/#/components/drawer)和[uiw/Button](https://uiwjs.github.io/#/components/button)封装\\n- ✅  支持原uiw/Drawer和uiw/Button参数\\n- ✅  支持快速生成button按钮\\n- ✅  button按钮的权限控制\\n\\n## 何时使用\\n抽屉从父窗体边缘滑入，覆盖住部分父窗体内容。用户在抽屉内操作时不必离开当前任务，操作完成后，可以平滑地回到原任务。\\n- 当需要一个附加的面板来控制父窗体内容，这个面板在需要时呼出。比如，控制界面展示样式，往界面中添加内容。\\n- 当需要在当前任务流中插入临时任务，创建或预览附加内容。比如展示协议条款，创建子对象。\\n<!--ProDrawer-->\\n\\n## 基础抽屉\\n> 基础抽屉，点击触发按钮抽屉从右滑出，点击遮罩区关闭。\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState } from 'react';\\nimport { ProDrawer } from '@uiw-admin/components'\\nimport { Button } from 'uiw'\\nconst Demo = () => {\\n  const [ drawerVisible,setDrawerVisible ] = useState( false )\\n    return (\\n     <div>\\n       <ProDrawer visible={drawerVisible} onClose={()=>setDrawerVisible(false)}>\\n        <div>基础抽屉</div>\\n       </ProDrawer>\\n      <Button type=\\\"primary\\\" onClick={()=>setDrawerVisible(true)}>打开弹框</Button>\\n     </div>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n\\n## 预设宽度\\n> 可通过width控制Drawer宽(默认800px),也可通过size控制\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState } from 'react';\\nimport { ProDrawer } from '@uiw-admin/components'\\nimport { Button } from 'uiw'\\nconst Demo = () => {\\n  const [ drawerVisible,setDrawerVisible ] = useState( false )\\n  const [ drawerVisible2,setDrawerVisible2 ] = useState( false )\\n  const [ drawerVisible3,setDrawerVisible3 ] = useState( false )\\n    return (\\n     <div>\\n       <ProDrawer visible={drawerVisible2} onClose={()=>setDrawerVisible2(false)}>\\n        <div>800px</div>\\n       </ProDrawer>\\n       <ProDrawer width={1000} visible={drawerVisible} onClose={()=>setDrawerVisible(false)}>\\n        <div>1000px</div>\\n       </ProDrawer>\\n       <ProDrawer size=\\\"small\\\" visible={drawerVisible3} onClose={()=>setDrawerVisible3(false)}>\\n        <div>size-small</div>\\n       </ProDrawer>\\n      <Button type=\\\"primary\\\" onClick={()=>setDrawerVisible2(true)}>打开弹框(800px)</Button>\\n      <Button type=\\\"primary\\\" onClick={()=>setDrawerVisible(true)}>打开弹框(1000px)</Button>\\n      <Button type=\\\"primary\\\" onClick={()=>setDrawerVisible3(true)}>打开弹框(size-small)</Button>\\n     </div>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n## 抽屉按钮\\n>通过传递buttons生成按钮,按钮继承了uiw/buttons,我们可以通过show控制按钮显示与隐藏\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState } from 'react';\\nimport { ProDrawer } from '@uiw-admin/components'\\nimport { Button } from 'uiw'\\nconst Demo = () => {\\n  const [ drawerVisible,setDrawerVisible ] = useState( false )\\n  const [ isView ] = useState( false )\\n    return (\\n     <div>\\n       <ProDrawer\\n        visible={drawerVisible}\\n        onClose={()=>setDrawerVisible(false)}\\n        buttons={[\\n   { label: '取消', type:\\\"primary\\\" , onClick: ()=>setDrawerVisible(false) },\\n          { label: '保存',type:\\\"primary\\\",show:false },\\n          { label: '禁用按钮',  disabled:true, show:true },\\n        ]}\\n      >\\n        <div>集成了Button</div>\\n      </ProDrawer>\\n      <Button type=\\\"primary\\\" onClick={()=>setDrawerVisible(true)}>打开弹框</Button>\\n     </div>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 表单抽屉\\n> 配和ProForm使用(新增;编辑;查看等业务)\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState } from 'react';\\nimport { ProDrawer,ProForm } from '@uiw-admin/components'\\nimport { Button } from 'uiw'\\nconst Demo = () => {\\n  const [ drawerVisible,setDrawerVisible ] = useState( false )\\n  const [ isView,setIsView] = useState( false )\\n    return (\\n     <div>\\n       <ProDrawer \\n          visible={drawerVisible} \\n          onClose={()=>setDrawerVisible(false)}\\n          buttons={[{ label: isView?'表单模式':'查看模式', type:\\\"primary\\\" , onClick:()=>setIsView(!isView)}]}\\n        >\\n         <ProForm\\n          readOnly={isView}\\n          formType=\\\"pure\\\"\\n          formDatas={ [\\n             {\\n               label: 'input',\\n               key: 'input',\\n               widget: 'input',\\n               initialValue: '',\\n               widgetProps: {},\\n               span:\\\"24\\\",\\n             },\\n          ]}\\n       />\\n       </ProDrawer>\\n      <Button type=\\\"primary\\\" onClick={()=>setDrawerVisible(true)}>打开弹框</Button>\\n     </div>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n## 抽屉按钮权限\\n> 我们可以通过path与登陆时获取的按钮权限菜单进行匹配,从而控制按钮的权限\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React from 'react';\\nimport { ProDrawer } from '@uiw-admin/components'\\nimport { Button } from 'uiw'\\nconst Demo = () => {\\n    return (\\n       <ProDrawer\\n        visible={drawerVisible}\\n        onClose={()=>setDrawerVisible(false)}\\n        buttons={[\\n          { label: '取消', type:\\\"primary\\\" , onClick: ()=>setDrawerVisible(false) },\\n          {\\n            label: '保存',\\n            type:\\\"primary\\\",\\n            onClick: ()=>{},\\n            path:\\\"/demo/drawer\\\"\\n          },\\n        ]}\\n      >\\n        <div>集成了Button</div>\\n      </ProDrawer>\\n  );\\n}\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n\\n\\n## Props\\n\\n#### 基础参数\\n[继承于uiw,请参考Drawer其余参数](https://uiwjs.github.io/#/components/drawer)\\n\\n| 参数    | 说明     | 类型           | 默认值 |\\n| :------ | :------- | :------------- | :----- |\\n| visible | 显示隐藏 | boolean        | -      |\\n| title   | 标题     | string         | -     |\\n| onClose | 关闭事件 | ()=>void       | null   |\\n| width   | Drawer宽 | number         | 1000   |\\n| buttons | 按钮集合 | ButtonsProps[] | []     |\\n\\n\\n#### ButtonsProps\\n[继承于uiw,请参考Button其余参数](https://uiwjs.github.io/#/components/button)\\n\\n| 参数     | 说明         | 类型    | 默认值 |\\n| :------- | :----------- | :------ | :----- |\\n| label    | 按钮文本     | string  | -      |\\n| show     | 是否展示按钮 | boolean | true   |\\n| path     | 权限         | string  | -      |\\n| disabled | 是否禁用     | boolean | false  |\\n\\n\\n\\n\\n## 贡献者\\n\\n感谢所有的贡献者，欢迎开发者为开源项目贡献力量。\\n\\n<a href=\\\"https://github.com/uiwjs/uiw-admin/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n## License\\n\\nLicensed under the MIT License.\";"],"names":[],"sourceRoot":""}