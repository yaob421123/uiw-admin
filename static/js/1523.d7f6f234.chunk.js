"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1523],{81523:function(n,e,t){t.r(e),e.default="# ProForm \u8868\u5355\n\n\u57fa\u4e8e[uiw Form](https://uiwjs.github.io/#/components/form)\u5c01\u88c5\u3002\n- \u2705  \u652f\u6301\u539fuiw/Form\u7684\u63d0\u4ea4\u65b9\u5f0f\u5e76\u53ef\u4ee5\u66f4\u7b80\u6d01\u7684\u751f\u6210\u8868\u5355\n- \u2705  \u652f\u6301\u591a\u4e2a\u8868\u5355\u540c\u65f6\u63d0\u4ea4\n- \u2705  \u652f\u6301\u52a8\u6001\u6dfb\u52a0\u8868\u5355\n- \u2705  \u652f\u6301\u53ea\u8bfb\u6a21\u5f0f\u8868\u5355\n\n## \u4f55\u65f6\u4f7f\u7528\n- \u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f53\u6216\u6536\u96c6\u4fe1\u606f\u3002\n- \u9700\u8981\u5bf9\u8f93\u5165\u7684\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u6821\u9a8c\u65f6\u3002\n\n\x3c!--ProForm--\x3e\n## \u7c7b\u578b\n> \b\u901a\u8fc7formType\u8868\u5355\u7c7b\u578b\n### \u5361\u7247\u7c7b\u578b\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nconst Demo = () => {\n    return (\n     <div>\n       <ProForm\n         title=\"\u5361\u7247\u8868\u5355\"\n         formType=\"card\"\n         onChange={(initial, current) => {\n          console.log('onChange', initial, current);\n         }}\n         colProps={{span:12}}\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n             },\n              {\n              label: 'radio',\n              widget: 'radio',\n              key: 'radio',\n              widgetProps: {\n                disabled: false\n              },\n              option: [\n                { label: '\u7537', value: 'man' },\n                { label: '\u5973', value: 'girl' }\n              ],\n            },\n          ]}\n       />\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n### \u6298\u53e0\u7c7b\u578b\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nconst Demo = () => {\n    return (\n     <div>\n       <ProForm\n         title=\"\u6298\u53e0\u8868\u5355\"\n         formType=\"collapse\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n             },\n          ]}\n       />\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n### \u7eaf\u8868\u5355\u7c7b\u578b\n> pure\u7c7b\u578b\u4e0b\u5c06\u4e0d\u518d\u5c55\u793atitle\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nconst Demo = () => {\n    return (\n     <div>\n       <ProForm\n         formType=\"pure\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n             },\n          ]}\n       />\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n## \u5e03\u5c40\n### \u57fa\u672c\u5e03\u5c40\n> \u901a\u8fc7span(\u7ee7\u627f\u4e8euiw/Graid/Col)\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nconst Demo = () => {\n    return (\n     <div>\n       <ProForm\n         formType=\"pure\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n             },\n               {\n               label: 'input',\n               key: 'input2',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"12\",\n             },\n               {\n               label: 'input',\n               key: 'input3',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"12\",\n             },\n             {\n               label: 'input',\n               key: 'input4',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"8\",\n             },\n             {\n               label: 'input',\n               key: 'input5',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"8\",\n             },\n             {\n               label: 'input',\n               key: 'input6',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"8\",\n             },\n          ]}\n       />\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n### \u53ea\u8bfb\u5e03\u5c40\n> \u901a\u8fc7readSpan(\u7ee7\u627f\u4e8euiw/Descriptions.Item)\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nconst Demo = () => {\n    return (\n     <div>\n       <ProForm\n         readOnly={true}\n         formType=\"pure\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               readSpan:3,\n             },\n               {\n               label: 'input',\n               key: 'input2',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               readSpan:2,\n             },\n               {\n               label: 'input',\n               key: 'input3',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               readSpan:1,\n             },\n             {\n               label: 'input',\n               key: 'input4',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               readSpan:1,\n             },\n             {\n               label: 'input',\n               key: 'input5',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               readSpan:1\n             },\n             {\n               label: 'input',\n               key: 'input6',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               readSpan:1,\n             },\n          ]}\n       />\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n\n\n## \u57fa\u672c\u4f7f\u7528\n> \u4e0euiw/form\u4f7f\u7528\u4fdd\u6301\u4e00\u81f4\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport { ProForm } from '@uiw-admin/components'\nimport { Button,Notify,Slider } from 'uiw'\nconst Demo = () => {\n  const [state,setState] = React.useState({})\n   const [option] = React.useState([\n    { value: 1, label: '\u82f9\u679c' },\n    { value: 2, label: '\u897f\u74dc' },\n    { value: 3, label: '\u9999\u8549' },\n    { value: 4, label: '\u4e1c\u5317\u5927\u51bb\u68a8' },\n    { value: 5, label: '\u9999\u8549' },\n    { value: 6, label: '\u8461\u8404' },\n    { value: 6, label: '\u54c8\u5bc6\u74dc' },\n   ])\n   const [loading, setLoading] = React.useState(false)\n   // \u6a21\u62df\u641c\u7d22\n  const handleSearch = ( type = '' , name = '' ) => {\n    if (type === 'searchSelect') {\n      setLoading(true)\n      setTimeout(() => {\n        setLoading(false)\n      }, 2000)\n    }\n  }\n    return (\n    <>\n       <ProForm\n         // \u8868\u5355\u7c7b\u578b\n         formType=\"collapse\"\n         title=\"\u57fa\u672c\u4f7f\u7528(\u4e0euiw/form\u4f7f\u7528\u4fdd\u6301\u4e00\u81f4)\"\n         // \u81ea\u5b9a\u4e49\u7ec4\u4ef6\n         customWidgetsList={{\n          slider: Slider,\n        }}\n         // \u662f\u5426\u5c55\u793auiw/form\u63d0\u4ea4\u6309\u94ae\n         showSaveButton\n         // \u662f\u5426\u5c55\u793auiw/form\u91cd\u7f6e\u6309\u94ae\n         showResetButton\n         // \u63d0\u4ea4\u540e\u9a8c\u8bc1\n         onSubmit={(initial, current) => {\n          const errorObj = {};\n          if (!current?.input) {\n            errorObj.input = 'input\u4e0d\u80fd\u4e3a\u7a7a';\n          }\n          if (Object.keys(errorObj).length > 0) {\n            const err = new Error();\n            err.filed = errorObj;\n            Notify.error({ title: '\u63d0\u4ea4\u5931\u8d25\uff01' });\n            throw err;\n          }\n          setState(current)\n          // \u8c03\u7528\u8bf7\u6c42\u63a5\u53e3\n        }}\n         formDatas={[\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               help:\"input\u4e0d\u80fd\u4e3a\u7a7a\",\n               required:true,\n             },\n             {\n              label: 'textarea',\n              key: 'textarea',\n              widget: 'textarea',\n              span:24,\n              colstyle:{ maxWidth:800 }\n             },\n             {\n              label: 'select',\n              key: 'select',\n              widget: 'select',\n              option: [\n                { value: 1, label: '\u82f9\u679c' },\n                { value: 2, label: '\u897f\u74dc' },\n                { value: 3, label: '\u9999\u8549' },\n                { value: 4, label: '\u4e1c\u5317\u5927\u51bb\u68a8' }\n              ],\n            },\n            {\n              label: 'switch',\n              key: 'switch',\n              widget: 'switch',\n            },\n            {\n              label: 'radio',\n              widget: 'radio',\n              key: 'radio',\n              option: [\n                { label: '\u7537', value: 'man' },\n                { label: '\u5973', value: 'girl' }\n              ],\n            },\n            {\n              label: '\u591a\u9009\u6846',\n              widget: 'checkbox',\n              key: 'checkbox',\n              option: [\n                { label: '\u56db\u5ddd\u83dc', value: 'sichuan' },\n                { label: '\u6e56\u5317\u83dc', value: 'hubei' }\n              ],\n            },\n            {\n              label: '\u5e74\u6708\u65e5\u65f6\u5206\u79d2',\n              key: 'dateInputsecond',\n              widget: 'dateInput',\n              widgetProps: {\n                format: 'YYYY-MM-DD HH:mm:ss'\n              },\n            },\n            {\n              label: '\u5e74\u6708\u65e5',\n              key: 'dateInput',\n              widget: 'dateInput',\n              widgetProps: {\n                format: 'YYYY-MM-DD'\n              },\n            },\n            {\n              label: '\u5e74\u6708',\n              key: 'monthPicker',\n              widget: 'monthPicker',\n               widgetProps: {\n                format: 'YYYY-MM'\n              },\n            },\n            {\n              label: '\u65f6\u5206\u79d2',\n              key: 'timePicker',\n              widget: 'timePicker',\n            },\n            {\n              label: 'searchSelect',\n              key: 'searchSelect',\n              widget: 'searchSelect',\n              option: option,\n              widgetProps: {\n                mode:\"multiple\",\n                onSearch: handleSearch.bind(this,'searchSelect'),\n                onChange: (value) => console.log('changevalue', value),\n                onSelect: (value) => console.log('selectvalue', value),\n                loading: loading,\n                allowClear: true,\n                showSearch: true,\n                style:{ width:\"100%\" }\n              },\n            },\n            {\n              label: '\u8bc4\u5206',\n              key: 'rate',\n              widget: 'rate',\n            },\n            // \u53ea\u8bfb\u6a21\u5f0f\u4e0b\u652f\u6301\u8bfb\u53d6React.ReactNode\n            {\n              label: '\u81ea\u5b9a\u4e49\u7ec4\u4ef6',\n              key: 'slider',\n              widget: 'slider',\n              readSpan: 2,\n              span:\"24\"\n            },\n            {\n              label: '\u4e0a\u4f20\u7ec4\u4ef6',\n              key: 'upload',\n              widget: 'upload',\n              span: '24',\n              readSpan: 3,\n              widgetProps: {\n                uploadType: 'card',\n                multiple: true,\n                maxNumber: 2,\n              showFileIcon: {\n                showPreviewIcon: true,\n                showRemoveIcon: true,\n              },\n            },\n            },\n            {\n              label: 'searchTree',\n              key: 'searchTree',\n              widget: 'searchTree',\n              span: '24',\n              readSpan: 3,\n              widgetProps:{\n                allowClear:true,\n                onSearch:(searchValue)=>console.log('SearchTree-> SearchTreeOption',searchValue),\n                onChange:(selectedAll, selectd, isChecked)=>console.log('SearchTree-> onChange',selectedAll, selectd, isChecked)\n              },\n              initialValue:[],\n              option:[\n                {\n                  label: '\u4e0a\u6d77\u5e02',\n                  key: '1-0-0',\n                  children:[\n                    { label: '\u9ec4\u6d66\u533a', key: '1-0-1' },\n                    { label: '\u5362\u6e7e\u533a', key: '1-0-2' },\n                    {\n                      label: '\u5f90\u6c47\u533a',\n                      key: '1-0-3',\n                      children:[\n                        { label: '\u534a\u6dde\u56ed\u8def\u8857\u9053', key: '1-1-0' },\n                        { label: '\u5357\u4eac\u4e1c\u8def\u8857\u9053', key: '1-2-0' },\n                        { label: '\u5916\u6ee9\u8857\u9053', key: '1-3-0' },\n                      ]\n                    },\n                  ]\n                }\n              ]\n            }\n          ]}\n       />\n        <div style={{ maxWidth: 200 }}>\n          <pre style={{ padding: '10px 0 0 10px' }}>{JSON.stringify(state, null, 2)}</pre>\n        </div>\n    </>\n  )\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n## \u901a\u8fc7useForm\n> (\u63d0\u4ea4,\u91cd\u7f6e,\u8bbe\u7f6e)\n> - \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7useForm\u6ce8\u518cform\u8868\u5355\u5b9e\u4f8b\u8fdb\u884c\u9a8c\u8bc1;\u91cd\u7f6e;\u8bbe\u7f6e\u3002(submitvalidate;getError;getFieldValues;setFields;resetForm...)\n> - \u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012rules\u914d\u7f6e\u9a8c\u8bc1\u89c4\u5219(\u652f\u6301\u6b63\u5219,required,\u56de\u8c03\u9a8c\u8bc1)\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { Button } from 'uiw'\nconst Demo = () => {\n  const [state,setState] = React.useState({})\n  const form = useForm()\n\n    return (\n     <div>\n       <ProForm\n         form={form}\n         title=\"\u901a\u8fc7form api\u8fdb\u884c\u8868\u5355\u63d0\u4ea4\"\n         formType=\"card\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n               required:true,\n               rules: [\n                { pattern: new RegExp(/[1][3][0-9]{9}$/), message: \"\u8bf7\u8f93\u5165\u6b63\u786e\u624b\u673a\u53f7\" },\n               ]\n             },\n          ]}\n       />\n       <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={async()=>{\n          // \u89e6\u53d1\u9a8c\u8bc1\n          await form.submitvalidate();\n          // \u83b7\u53d6\u9519\u8bef\u4fe1\u606f\n          const errors = form.getError()\n          if(errors && Object.keys(errors).length > 0 ) return\n          const value = form.getFieldValues?.()\n          setState(value)\n         // \u8c03\u7528\u8bf7\u6c42\u63a5\u53e3\n       }}\n       >\n        \u4fdd\u5b58\n      </Button>\n      <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={()=>{\n          form.resetForm()\n          setState({})\n        }}\n       >\n        \u91cd\u7f6e\n      </Button>\n       <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={()=> {\n          form.setFields({input:'1234'})\n          setState({input:'1234'})\n        } }\n       >\n        \u8bbe\u7f6e\n      </Button>\n      <div style={{ maxWidth: 500 }}>\n        <pre style={{ padding: '10px 0 0 10px' }}>{JSON.stringify(state, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n## \u591a\u4e2a\u8868\u5355\n### \u57fa\u7840\u63d0\u4ea4\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { Button } from 'uiw'\nconst Demo = () => {\n  const [state,setState] = React.useState({})\n  const form = useForm()\n  const form2 = useForm()\n\n  return (\n     <div>\n       <ProForm\n         form={form}\n         title=\"\u8868\u5355\u4e00\"\n         formType=\"card\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n               required:true,\n               rules: [\n                { required: true, message: '\u8bf7\u8f93\u5165' },\n                { pattern: new RegExp(/[1][3][0-9]{9}$/), message: \"\u8bf7\u8f93\u5165\u6b63\u786e\u624b\u673a\u53f7\" },\n               ]\n             },\n          ]}\n       />\n        <div style={{ marginTop:15 }} />\n        <ProForm\n         formType=\"pure\"\n         form={form2}\n         title=\"\u8868\u5355\u4e8c\"\n         formType=\"card\"\n         formDatas={ [\n             {\n               label: 'input2',\n               key: 'input2',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n               required:true,\n               rules: [\n                { \n                  validator: (value = '') => {\n                    if(!value) return false\n                    return true\n                  },\n                  message: \"\u8bf7\u8f93\u5165\"\n                },\n               ]\n             },\n             {\n               label: 'input3',\n               key: 'input3',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n               required:true,\n               rules: [\n                { \n                  validator: (value = '') => {\n                    if(!value) return \"\u8bf7\u8f93\u5165\"\n                    return true\n                  },\n                },\n               ]\n             },\n          ]}\n       />\n       <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={ async ()=>{\n          // \u89e6\u53d1\u9a8c\u8bc1\n          await form?.submitvalidate()\n          await form2?.submitvalidate()\n          // \u83b7\u53d6\u9519\u8bef\u4fe1\u606f\n          const errors = form.getError()\n          const errors2 = form2.getError()\n\n          if(errors && Object.keys(errors).length > 0 ) return\n          if(errors2 && Object.keys(errors2).length > 0 ) return\n          // \u83b7\u53d6\u8868\u5355\u503c\n          const value = form.getFieldValues?.()\n          const value2 = form2.getFieldValues?.()\n          const params = {...value,...value2}\n          setState(params)\n          // \u8c03\u7528\u8bf7\u6c42\u63a5\u53e3\n       }}>\n         \u4fdd\u5b58\n      </Button>\n      <div style={{ maxWidth: 500 }}>\n        <pre style={{ padding: '10px 0 0 10px' }}>{JSON.stringify(state, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n### promise\u63d0\u4ea4\n> (\u901a\u8fc7validateFieldsAndGetValue\u65b9\u6cd5\u5148\u9a8c\u8bc1\u540e\u83b7\u53d6\u503c)\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { Button } from 'uiw'\nconst Demo = () => {\n  const [state,setState] = React.useState({})\n  const form = useForm()\n  const form2 = useForm()\n\n  const asyncAwaitFormList = (arr=[]) => {\n    return (\n      arr && arr.length>0 &&  Promise.all(arr).then((vals) =>{\n        return vals\n      })\n    )\n  };\n\n  return (\n     <div>\n       <ProForm\n         form={form}\n         title=\"\u8868\u5355\u4e00\"\n         formType=\"card\"\n         formDatas={ [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n               required:true,\n               rules: [\n                { required: true, message: '\u8bf7\u8f93\u5165' },\n                { pattern: new RegExp(/[1][3][0-9]{9}$/), message: \"\u8bf7\u8f93\u5165\u6b63\u786e\u624b\u673a\u53f7\" },\n               ]\n             },\n          ]}\n       />\n        <div style={{ marginTop:15 }} />\n        <ProForm\n         formType=\"pure\"\n         form={form2}\n         title=\"\u8868\u5355\u4e8c\"\n         formType=\"card\"\n         formDatas={ [\n             {\n               label: 'input2',\n               key: 'input2',\n               widget: 'input',\n               initialValue: '',\n               widgetProps: {},\n               span:\"24\",\n               required:true,\n               rules: [\n                { \n                  validator: (value = '') => {\n                    if(!value) return false\n                    return true\n                  },\n                  message: \"\u8bf7\u8f93\u5165\"\n                },\n               ]\n             },\n          ]}\n       />\n       <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={ async ()=>{\n          // \u89e6\u53d1\u9a8c\u8bc1\u83b7\u53d6\u503c\n          const values = await asyncAwaitFormList([form?.validateFieldsAndGetValue(),form2?.validateFieldsAndGetValue()])\n          let obj = {};\n          values.forEach((item) => Object.assign(obj, item));\n          setState(obj)\n          // \u8c03\u7528\u8bf7\u6c42\u63a5\u53e3\n       }}>\n         \u4fdd\u5b58\n      </Button>\n      <div style={{ maxWidth: 500 }}>\n        <pre style={{ padding: '10px 0 0 10px' }}>{JSON.stringify(state, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n## \u52a8\u6001\u6dfb\u52a0\u8868\u5355\n### uiw/form\u63d0\u4ea4\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React, { useState,useRef } from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { Button,Card } from 'uiw'\n\nconst Demo = () => {\n  const form = useForm()\n  const formRefList = useRef([])\n  const [state,setState] = useState([])\n  const [items,setItems] = useState([])\n  const [option,setOption] = React.useState([])\n  const [loading, setLoading] = React.useState(false)\n  // \u8fc7\u6ee4\u5220\u9664\u4e3anull\u7684ref\n  const formList = formRefList?.current.filter(n => n) || []\n\n   const asyncAwaitFormList = (arr=[]) => {\n    return (\n      arr && arr.length>0 &&  Promise.all(arr).then((vals) =>{\n        return vals\n      })\n    )\n  };\n\n  const addItems = (attr)=>[\n     {\n      label: '\u53f8\u673a\u624b\u673a\u53f7',\n      key: 'phone',\n      widget: 'input',\n      initialValue: '',\n      required:true,\n      rules: [\n        { required: true, message: '\u8bf7\u8f93\u5165' },\n      ]\n    },\n    {\n      label: 'searchSelect',\n      key: 'searchSelect',\n      widget: 'searchSelect',\n      option: attr.searchSelect.option,\n      widgetProps: {\n        mode:\"multiple\",\n        onSearch: attr.searchSelect.onSearch,\n        loading: attr.searchSelect.loading,\n        allowClear: true,\n        showSearch: true,\n        style:{ width:\"100%\" }\n     },\n    },\n  ]\n\n  const handleAddFormItems = (type,idx)=>{\n    if(type==='add'){\n       items.push(addItems)\n    }\n    if(type==='delete'){\n      items.splice(idx,1)\n    }\n    setItems([...items])\n  }\n\n   // \u6a21\u62df\u641c\u7d22\n  const handleSearch = ( type = '' , name = '' ) => {\n    if (type === 'searchSelect') {\n      setLoading(true)\n      setOption([\n        { value: 1, label: '\u82f9\u679c' },\n        { value: 2, label: '\u897f\u74dc' },\n        { value: 3, label: '\u9999\u8549' },\n        { value: 4, label: '\u4e1c\u5317\u5927\u51bb\u68a8' },\n      ])\n      setTimeout(() => {\n        setLoading(false)\n      }, 2000)\n    }\n  }\n\n  const handleSave = async ()=>{\n    const validateList = formList.map(itm=>itm.validateFieldsAndGetValue()) || []\n    const values = await asyncAwaitFormList(validateList)\n    setState(values)\n    console.log(\"values\",values)\n    // \u8c03\u7528\u63a5\u53e3\n  }\n\n  return (\n     <div>\n      {items.map((item, idx) => {\n          return (\n           <Card \n            title={`\u8868\u5355${idx + 1}`} \n            key={idx} \n            style={{ marginBottom:10 }} \n            extra={<span onClick={handleAddFormItems.bind(this,'delete',idx)}>\u5220\u9664</span>}\n            >\n             <ProForm\n              ref={(e) =>(formRefList.current[idx] = e)}\n              // \u8868\u5355\u7c7b\u578b\n              formType=\"pure\"\n              form={form}\n              cardProps={{\n                noHover: true,\n              }}\n              // \u66f4\u65b0\u8868\u5355\u7684\u503c\n              buttonsContainer={{ justifyContent: 'flex-start' }}\n              formDatas={item({\n                searchSelect:{\n                  option:option,\n                  onSearch: handleSearch.bind(this,'searchSelect'),\n                  loading:loading\n                }\n              })}\n            />\n          </Card>\n          )\n        })}\n       <Button \n        style={{ marginTop:10,width:80 }}  \n        type=\"primary\"  \n        onClick={handleAddFormItems.bind(this,'add')}>\n         \u65b0\u589e\n        </Button>\n       <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={() => handleSave()}>\n        \u4fdd\u5b58\n      </Button>\n      <div style={{ maxWidth: 500 }}>\n        <pre style={{ padding: '10px 0 0 10px' }}>{JSON.stringify(state, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n### promise\u63d0\u4ea4\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport React, { useState,useRef } from 'react';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { Button,Card } from 'uiw'\n\nconst Demo = () => {\n  const form = useForm()\n  const formRefList = useRef([])\n  const [state,setState] = useState([])\n  const [items,setItems] = useState([])\n  const [option,setOption] = React.useState([])\n  const [loading, setLoading] = React.useState(false)\n  // \u8fc7\u6ee4\u5220\u9664\u4e3anull\u7684ref\n  const formList = formRefList?.current.filter(n => n) || []\n\n   const asyncAwaitFormList = (arr=[]) => {\n    return (\n      arr && arr.length>0 &&  Promise.all(arr).then((vals) =>{\n        return vals\n      })\n    )\n  };\n\n  const addItems = (attr)=>[\n     {\n      label: '\u53f8\u673a\u624b\u673a\u53f7',\n      key: 'phone',\n      widget: 'input',\n      initialValue: '',\n      required:true,\n      rules: [\n        { required: true, message: '\u8bf7\u8f93\u5165' },\n      ]\n    },\n    {\n      label: 'searchSelect',\n      key: 'searchSelect',\n      widget: 'searchSelect',\n      option: attr.searchSelect.option,\n      widgetProps: {\n        mode:\"multiple\",\n        onSearch: attr.searchSelect.onSearch,\n        loading: attr.searchSelect.loading,\n        allowClear: true,\n        showSearch: true,\n        style:{ width:\"100%\" }\n     },\n    },\n  ]\n\n  const handleAddFormItems = (type,idx)=>{\n    if(type==='add'){\n       items.push(addItems)\n    }\n    if(type==='delete'){\n      items.splice(idx,1)\n    }\n    setItems([...items])\n  }\n\n   // \u6a21\u62df\u641c\u7d22\n  const handleSearch = ( type = '' , name = '' ) => {\n    if (type === 'searchSelect') {\n      setLoading(true)\n      setOption([\n        { value: 1, label: '\u82f9\u679c' },\n        { value: 2, label: '\u897f\u74dc' },\n        { value: 3, label: '\u9999\u8549' },\n        { value: 4, label: '\u4e1c\u5317\u5927\u51bb\u68a8' },\n      ])\n      setTimeout(() => {\n        setLoading(false)\n      }, 2000)\n    }\n  }\n\n  const handleSave = async ()=>{\n    const validateList = formList.map(itm=>itm.validateFieldsAndGetValue()) || []\n    const values = await asyncAwaitFormList(validateList)\n    setState(values)\n    console.log(\"values\",values)\n    // \u8c03\u7528\u63a5\u53e3\n  }\n\n  return (\n     <div>\n      {items.map((item, idx) => {\n          return (\n           <Card \n            title={`\u8868\u5355${idx + 1}`} \n            key={idx} \n            style={{ marginBottom:10 }} \n            extra={<span onClick={handleAddFormItems.bind(this,'delete',idx)}>\u5220\u9664</span>}\n            >\n             <ProForm\n              ref={(e) =>(formRefList.current[idx] = e)}\n              // \u8868\u5355\u7c7b\u578b\n              formType=\"pure\"\n              form={form}\n              cardProps={{\n                noHover: true,\n              }}\n              // \u66f4\u65b0\u8868\u5355\u7684\u503c\n              buttonsContainer={{ justifyContent: 'flex-start' }}\n              formDatas={item({\n                searchSelect:{\n                  option:option,\n                  onSearch: handleSearch.bind(this,'searchSelect'),\n                  loading:loading\n                }\n              })}\n            />\n          </Card>\n          )\n        })}\n       <Button \n        style={{ marginTop:10,width:80 }}  \n        type=\"primary\"  \n        onClick={handleAddFormItems.bind(this,'add')}>\n         \u65b0\u589e\n        </Button>\n       <Button \n        style={{ marginTop:10,width:80 }} \n        type=\"primary\" \n        onClick={() => handleSave()}>\n        \u4fdd\u5b58\n      </Button>\n      <div style={{ maxWidth: 500 }}>\n        <pre style={{ padding: '10px 0 0 10px' }}>{JSON.stringify(state, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n## \u53ea\u8bfb\u6a21\u5f0f\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { formatter } from 'uiw'\nimport React, { useState } from 'react';\nconst Demo = () => {\n  const [ queryInfo ] = useState({\n    input:\"Jason\",\n    textarea:\"Jason\",\n    select:\"Jason\",\n    dateInputsecond: '2021-1-21 23:59:59',\n    dateInput: '2021-1-21',\n    monthPicker: '2021-1',\n    timePicker: '2021-1-21 22:59:59',\n    searchSelect:[\"Jason\"],\n    rate:2\n  })\n  const form = useForm()\n    return (\n       <ProForm\n        form={form}\n         readOnly={true}\n         title=\"\u53ea\u8bfb\u6a21\u5f0f\"\n         formType=\"pure\"\n         // \u53ea\u8bfb\u6a21\u5f0f\u4e0b\u8c03\u6574 \u4e00\u884c\u7684 DescriptionItems \u6570\u91cf,\u5176\u4f59\u53c2\u6570\u53c2\u8003uiw/Descriptions\n         readOnlyProps={{ column:2 }}\n         formDatas={\n           [\n             {\n               label: 'input',\n               key: 'input',\n               widget: 'input',\n               // \u53ea\u8bfb\u6a21\u5f0f\u4e0b\u652f\u6301\u8bfb\u53d6React.ReactNode\n               initialValue: queryInfo?.input,\n             },\n             {\n               label: 'textarea',\n               key: 'textarea',\n               widget: 'textarea',\n               initialValue: queryInfo?.textarea,\n             },\n             {\n               label: 'select',\n               key: 'select',\n               widget: 'select',\n               option:[{label:\"Jason\",value:\"Jason\"}],\n               initialValue: queryInfo?.select,\n             },\n             {\n              label: 'dateInput',\n              key: 'dateInputsecond',\n              widget: 'dateInput',\n              widgetProps: {\n                // \u5e74\u6708\u65e5\u65f6\u5206\u79d2\n                format: 'YYYY-MM-DD HH:mm:ss'\n              },\n              initialValue: queryInfo?.dateInputsecond\n            },\n            {\n              label: 'dateInput',\n              key: 'dateInput',\n              widget: 'dateInput',\n              widgetProps: {\n                // \u5e74\u6708\u65e5\n                format: 'YYYY-MM-DD'\n              },\n              initialValue: queryInfo?.dateInput\n            },\n            {\n              label: 'monthPicker',\n              key: 'monthPicker',\n              widget: 'monthPicker',\n              widgetProps: {\n                // \u5e74\u6708\n                format: 'YYYY-MM'\n              },\n              initialValue: queryInfo?.monthPicker\n            },\n            {\n              label: 'timePicker',\n              key: 'timePicker',\n              widget: 'timePicker',\n              initialValue: queryInfo.timePicker && new Date(queryInfo.timePicker)\n            },\n            {\n              label: 'searchSelect',\n              key: 'searchSelect',\n              widget: 'searchSelect',\n              widgetProps:{\n                mode:\"multiple\",\n              },\n              option:[{label:\"Jason\",value:\"Jason\"}],\n              initialValue:queryInfo.searchSelect || []\n            },\n            {\n              label: 'rate',\n              key: 'rate',\n              widget: 'rate',\n              initialValue:queryInfo.rate\n            },\n            {\n              label: 'upload',\n              key: 'upload',\n              widget: 'upload',\n              widgetProps:{\n                uploadType: 'card',\n              },\n              initialValue: [\n                {\n                  dataURL: 'https://avatars2.githubusercontent.com/u/1680273?s=40&v=4',\n                  name: 'uiw.png',\n                },\n              ]\n            },\n           ]}\n       />\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n\n\n## \u81ea\u5b9a\u4e49\u8868\u5355\u7ec4\u4ef6\n\n> \u7ed9\u7ec4\u4ef6\u4f20`value`, `onChange`  \u4e00\u4e2a\u662f\u503c \u4e00\u4e2a\u662f\u7ec4\u4ef6\u66f4\u6539\u6570\u636e\u56de\u8c03\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport ReactDOM from 'react-dom';\nimport { ProForm,useForm } from '@uiw-admin/components'\nimport { formatter, Input, Button } from 'uiw'\nimport React, { useState } from 'react';\n\nconst Inputs = ({value, onChange}) => {\n  return <>\n    <Button>\u4e0d\u8981\u8f93\u9519\u54e6</Button>\n    <Input placeholder=\"\u8bf7\u8f93\u5165\u5185\u5bb9\"  value={value} onChange={e => { onChange(e.target.value) }}  />\n  </>\n}\n\nconst Demo = () => {\n  const [ queryInfo ] = useState({\n    input:\"Jason\",\n  })\n  const form = useForm()\n    return (\n       <ProForm\n        customWidgetsList={{inputs: Inputs}}\n        form={form}\n         title=\"\u53ea\u8bfb\u6a21\u5f0f\"\n         formType=\"pure\"\n         formDatas={\n           [\n             {\n               label: '\u81ea\u5b9a\u4e49\u7ec4\u4ef6',\n               key: 'input',\n               widget: 'inputs',\n               // \u53ea\u8bfb\u6a21\u5f0f\u4e0b\u652f\u6301\u8bfb\u53d6React.ReactNode\n               initialValue: queryInfo.input,\n             },\n           ]}\n       />\n  );\n}\nReactDOM.render(<Demo />, _mount_);\n```\n\n## Props\n> \u7ee7\u627fuiw-Form\n\n| \u53c2\u6570               | \u8bf4\u660e                                              | \u7c7b\u578b                                                                     | \u9ed8\u8ba4\u503c |\n| ------------------ | ------------------------------------------------- | ------------------------------------------------------------------------ | ------ |\n| formDatas          | \u8868\u5355\u9879\u96c6\u5408                                        | FormItemsProps[]                                                         | []     |\n| onSubmit           | \u63d0\u4ea4\u8868\u5355\u56de\u8c03 \u9700\u914d\u5408btns\uff0c\u7ee7\u627fuiw/form submit      | (initial: `Record<string, any>`, current: `Record<string, any>`) => void | -      |\n| onChange           | \u8868\u5355\u503c\u53d8\u5316\u56de\u8c03\uff0c\u7ee7\u627fuiw/form onChange             | (initial: `Record<string, any>`, current: `Record<string, any>`) => void | -      |\n| onSubmitError           | \u8c03\u7528 onSubmit \u629b\u51fa\u7684\u4efb\u4f55\u9519\u8bef\u3002\u4ece\u5b57\u6bb5\u540d\u79f0\u8fd4\u56de\u5bf9\u8c61\u6620\u5c04\u3002 \u7ee7\u627fuiw/form onSubmitError             | (error:`any`) => void |  -     |\n| showSaveButton     | \u5c55\u793a\u63d0\u4ea4\u6309\u94ae                                      | boolean                                                                  | false  |\n| showResetButton    | \u5c55\u793a\u91cd\u7f6e\u6309\u94ae                                      | boolean                                                                  | false  |\n| saveButtonProps    | \u63d0\u4ea4\u6309\u94aeapi;\u7ee7\u627f\u4e8euiw/button                      | ButtonProps                                                                  | -  |\n| resetButtonProps   | \u91cd\u7f6e\u6309\u94aeapi;\u7ee7\u627f\u4e8euiw/button                      | ButtonProps                                                                  | -  |\n| buttonsContainer   | buttons\u5bb9\u5668\u6837\u5f0f(\u53ef\u8c03\u6574button\u5e03\u5c40)                 | React.CSSProperties                                                      | -      |\n| title              | \u6807\u9898                                              | string                                                                   | -      |\n| formType           | \u8868\u5355\u7c7b\u578b                                          | 'collapse' \u6216 'card' \u6216 'pure'                                           | 'card' |\n| form               | useForm\u8fd4\u56de\u503c,\u66ff\u6362\u539f\u6709submitRef\u4f5c\u7528\u53ef\u8fdb\u884c\u8868\u5355\u9a8c\u8bc1 | UseFormProps \u5fc5\u4f20                                                              | -      |\n| readOnly           | \u662f\u5426\u662f\u53ea\u8bfb\u6a21\u5f0f\u6a21\u5f0f                                | boolean                                                                  | false  |\n| readOnlyProps      | \u53ea\u8bfb\u6a21\u5f0f \u53c2\u8003Descriptions\u53c2\u6570                     | DescriptionsProps                                                        | {}     |\n| customWidgetsList  | \u53ef\u914d\u7f6e\u81ea\u5b9a\u4e49\u7ec4\u4ef6                                  | { [key: string]: any }                                                   | {}     |\n| cardProps          | uiw`Card` API                                     | CardProps                                                                | {}     |\n| collapseProps      | uiw`Collapse` API                                 | CollapseProps                                                            | {}     |\n| collapsePanelProps | uiw`Collapse.Panel` API                           | CollapsePanelProps                                                       | {}     |\n| colProps           | uiw`Col` API,\u516c\u5171\u5c5e\u6027                              | colProps                                                                 |         |\n\n\n### saveButtonProps resetButtonProps\n\n\u5176\u4f59\u5c5e\u6027\u7ee7\u627f\u4e8e[uiw/button](https://uiwjs.github.io/#/components/button)\n\n| \u53c2\u6570     | \u8bf4\u660e     | \u7c7b\u578b                     | \u9ed8\u8ba4\u503c |\n| -------- | -------- | ------------------------ | ------ |\n| label    | \u6309\u94ae\u6807\u9898     | string           | \u63d0\u4ea4/\u91cd\u7f6e      |\n\n\n\n### FormItemsProps\n> \u7ee7\u627fuiw-FormItem\n\n| \u53c2\u6570         | \u8bf4\u660e                                                          | \u7c7b\u578b                    | \u9ed8\u8ba4\u503c |\n| ------------ | ------------------------------------------------------------- | ----------------------- | ------ |\n| label        | \u8868\u5355\u9879\u540d\u79f0                                                    | string                  | -      |\n| key          | \u8868\u5355\u9879key                                                     | string                  | -      |\n| widget       | \u8868\u5355\u9879\u7c7b\u578b                                                    | sring                   | -      |\n| initialValue | \u8868\u5355\u9879\u503c\uff0c\u53ef\u4ee5\u662f\u9ed8\u8ba4\u503c                                        | any \u6216 any[]            | -      |\n| option       | \u6570\u636e\u5316\u9009\u9879\u5185\u5bb9, widget\u4e3a radio\u3001checkbox\u3001select \u751f\u6548           | OptionsProps[] | -      |\n| widgetProps  | \u8868\u5355\u7ec4\u4ef6\u5176\u4f59\u53c2\u6570,\u53c2\u8003uiw\u8868\u5355\u7ec4\u4ef6                              | any                     | -      |\n| hide         | \u662f\u5426\u663e\u793a                                                      | boolean                 | true   |\n| span         | \u975e\u53ea\u8bfb\u6a21\u5f0f\u4e0b,\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a 24 \u5217\u4e2d\u6bcf\u5217\u7684\u5bbd\u5ea6\u6765\u521b\u5efa\u57fa\u672c\u7f51\u683c\u7cfb\u7edf | string                  | '8'    |\n| readSpan     | \u53ea\u8bfb\u6a21\u5f0f\u4e0b\u5305\u542b\u5217\u7684\u6570\u91cf \u53c2\u8003Descriptions.Item                  | number                  | 1      |\n| required     | \u662f\u5426\u5fc5\u586b                                                      | boolean                 | -      |\n| rules     | \u9a8c\u8bc1\u89c4\u5219                                                      | RulesProps[]                 | -      |\n| colstyle     | Col(uiw/Grid)\u6837\u5f0f                                         | React.CSSProperties                | -      |\n\n\n### RulesProps\n| \u53c2\u6570     | \u8bf4\u660e     | \u7c7b\u578b                     | \u9ed8\u8ba4\u503c |\n| -------- | -------- | ------------------------ | ------ |\n| message    | \u9a8c\u8bc1\u63d0\u793a\u6d88\u606f     | string           | -      |\n| pattern    | \u9a8c\u8bc1\u6b63\u5219      | RegExp | -      |\n| validator | \u81ea\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219 | (value: any \\| any[]) => boolean\\|string | - | \n| required | \u662f\u5426\u5fc5\u586b | boolean | - | \n\n### OptionsProps\n| \u53c2\u6570     | \u8bf4\u660e     | \u7c7b\u578b                     | \u9ed8\u8ba4\u503c |\n| -------- | -------- | ------------------------ | ------ |\n| label    | \u540d\u79f0     | string(\u5fc5\u4f20\u503c)           | -      |\n| value    | key      | string \u6216 number(\u5fc5\u4f20\u503c) | -      |\n| disabled | \u662f\u5426\u7981\u7528 | boolean                  | -      |\n\n## useForm\n\n### response\n> - v5.2.14(~~clickRef~~) \n> - v5.2.18(~~formStateList~~) (~~setFormStateList~~) (~~errorsRef~~) \n\n| \u53c2\u6570     | \u8bf4\u660e     | \u7c7b\u578b                     | \u9ed8\u8ba4\u503c |\n| -------- | -------- | ------------------------ | ------ |\n| submitvalidate | \u8868\u5355\u9a8c\u8bc1 | ()=>void | - | \n| resetForm | \u91cd\u7f6e\u8868\u5355\u503c | ()=>void | - | \n| onSubmit | \u8868\u5355\u63d0\u4ea4 | (e: React.FormEvent)=>void | - |   \n| getFieldValues | \u83b7\u53d6\u8868\u5355\u503c | ()=>void | - |  \n| getError | \u83b7\u53d6\u8868\u5355\u9519\u8bef | ()=>void | - |  \n| setFields | \u8bbe\u7f6e\u8868\u5355\u7684\u503c | (fields: FormState['current'])=>void | [] |      \n| validateFieldsAndGetValue | \u9a8c\u8bc1\u5e76\u83b7\u53d6\u503c | ()=>Promise`<any>` | [] |   \n\n## \u6ce8\u610f\n> [\u7ee7\u627f\u4e8euiw/Form,\u8bf7\u53c2\u8003uiw/From\u4ee5\u53ca\u8868\u5355\u7ec4\u4ef6](https://uiwjs.github.io/#/components/form),\n \u9ed8\u8ba4\u96c6\u6210\u4e86`Input`,`Checkbox`,`Switch`,`Textarea`,`DateInput`,`TimePicker`,\n `MonthPicker`,`SearchSelect`,`Select`,`Radio`,`selectMultiple`,`Rate`,`Upload`\u3002\n\x3c!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;--\x3e\n\n## \u8d21\u732e\u8005\n\n\u611f\u8c22\u6240\u6709\u7684\u8d21\u732e\u8005\uff0c\u6b22\u8fce\u5f00\u53d1\u8005\u4e3a\u5f00\u6e90\u9879\u76ee\u8d21\u732e\u529b\u91cf\u3002\n\n<a href=\"https://github.com/uiwjs/uiw-admin/graphs/contributors\">\n  <img src=\"https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg\" />\n</a>\n\n## License\n\nLicensed under the MIT License.\n"}}]);
//# sourceMappingURL=1523.d7f6f234.chunk.js.map