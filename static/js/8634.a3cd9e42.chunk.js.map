{"version":3,"file":"static/js/8634.a3cd9e42.chunk.js","mappings":"gHAAA,wyZ","sources":["../../../packages/config/README.md"],"sourcesContent":["export default \"# kkt配置\\n\\n[![npm version](https://img.shields.io/npm/v/@uiw-admin/config.svg?label=@uiw-admin/config)](https://www.npmjs.com/package/@uiw-admin/config)\\n\\n简化 `.kktrc` 配置，默认集成 `@uiw-admin/plugins`、`@kkt/less-modules`、`@kkt/raw-modules`、`@kkt/scope-plugin-options` 依赖包。\\n其他配置查询[`kkt`](https://github.com/kktjs/kkt)\\n\\n## 安装\\n\\n```bash\\nnpm i @uiw-admin/config -D # yarn add @uiw-admin/config\\n```\\n\\n## 参数说明(ConfigProps)\\n\\n| 参数             | 必填 | 类型                                                 | 默认值                                   | 说明                                                             |\\n| :--------------- | :--- | :--------------------------------------------------- | :--------------------------------------- | :--------------------------------------------------------------- |\\n| alias            | 否   | `Record<string, string \\\\| false \\\\| string[]>`        | `@:指向 src 目录，@@:指向 src/.uiw 目录` | 别名                                                             |\\n| plugins          | 否   | `PluginsType`                                        |                                          | 插件                                                             |\\n| define           | 否   | `Record<string, any> & DefaultDefineType`            |                                          | 默认全局变量，📢 注意：对象的属性值会经过一次 JSON.stringify 转换 |\\n| ~~~loader~~~     | 否   | `KKTPlugins`                                         |                                          | kkt plugin，(⚠️将在V6版本中删除)                                  |\\n| kktPlugins       | 否   | `KKTPlugins`                                         |                                          | kkt plugin                                                       |\\n| publicPath       | 否   | `string`                                             | `/`                                      | 项目前缀                                                         |\\n| ~~~moreConfig~~~ | 否   | `ConfFun`                                            |                                          | 提供回调函数，更改 webpack 的最终配置 ，(⚠️将在V6版本中删除)      |\\n| overrideWebpack  | 否   | `ConfFun`                                            |                                          | 提供回调函数，更改 webpack 的最终配置 ，                         |\\n| output           | 否   | `Omit<WebpackConfiguration['output'], 'publicPath'>` |                                          | 输出                                                             |\\n| rematch          | 否   | `{lazyLoad(懒加载)?: boolean}`                       |                                          | `rematch`的`plugin`配置                                          |\\n\\n继承[kkt](https://github.com/kktjs/kkt)配置\\n\\n### ConfFun 类型\\n\\n```ts\\nexport type ConfFun = (conf: WebpackConfiguration, evn: string, options?: LoaderConfOptions | undefined) => WebpackConfiguration\\n```\\n\\n## rematch\\n\\n1. 参数 `lazyLoad`  `boolean` 类型 ，默认 `false`\\n\\n```ts\\nimport defaultConfig from \\\"@uiw-admin/config\\\";\\n\\nexport default defaultConfig({\\n  // ....\\n  rematch:{\\n    lazyLoad:true,\\n  }\\n})\\n\\n```\\n\\n### lazyLoad\\n\\n1. 设置 `lazyLoad` 后 `model` 绑定路由关系，去除后面的`/models/*`或`/models.ts` 路径，匹配路由配置文件中的 `component` 属性值\\n2. 把`model`进行懒加载\\n⚠️ 注意：如果使用懒加载`model`，则调用`model`时，只能调用已经加载的，否则会报错\\n\\n```txt\\n\\nsrc\\n  pages\\n    foo/models/b.ts   绑定到  path === \\\"/foo\\\" 路由中\\n    test/models.ts  绑定到  path === \\\"/test\\\" 路由中\\n\\n// config/routes.json\\n[\\n  {\\n    \\\"path\\\": \\\"/foo\\\",\\n    \\\"name\\\": \\\"查询表格\\\",\\n    \\\"component\\\": \\\"@/pages/foo\\\",\\n  },\\n  {\\n    \\\"path\\\": \\\"/test\\\",\\n    \\\"name\\\": \\\"表格2\\\",\\n    \\\"component\\\": \\\"@/pages/test\\\"\\n  },\\n]\\n\\n```\\n\\n设置 `lazyLoad` 属性需要在项目入口文件加属性\\n\\n```diff\\nimport React from 'react'\\nimport ReactDOM from 'react-dom'\\nimport Control from '@uiw-admin/router-control'\\nimport '@uiw/reset.css'\\nimport './index.css'\\n\\nReactDOM.render(\\n  // ....\\n    <Control\\n      routeType=\\\"hash\\\"\\n+      addModels={(path) => import(`${path}`)} // 或者使用 require 引入\\n    />\\n  ,\\n  document.getElementById('root')\\n)\\n\\n```\\n\\n## kktPlugins \\n\\n[`KKT`](https://github.com/kktjs/kkt) 的 plugin\\n\\n```ts\\nimport defaultConfig, { WebpackConfiguration } from \\\"@uiw-admin/config\\\";\\n\\nexport default defaultConfig({\\n  // ....\\n  kktPlugins: [\\n    \\\"@kkt/raw-modules\\\",\\n    \\\"@kkt/less-modules\\\",\\n    [\\\"@kkt/scope-plugin-options\\\", { \\\"allowedFiles\\\": \\\"./README.md\\\" }],\\n  ],\\n})\\n```\\n\\n## overrideWebpack\\n\\n通过 [`KKT`](https://github.com/kktjs/kkt) 的 API 修改 webpack 配置。\\n\\n```ts\\nimport defaultConfig, { WebpackConfiguration } from \\\"@uiw-admin/config\\\";\\n\\nexport default defaultConfig({\\n  // ....\\n  overrideWebpack: (conf: WebpackConfiguration) => {\\n    conf.output = { ...conf.output, publicPath: './' };\\n    return conf\\n  }\\n})\\n```\\n\\n## define\\n\\n用于提供给代码中可用的变量。下面是自带默认值：\\n\\n### DefaultDefineType 类型\\n\\n| 参数          | 必填 | 类型                                         | 默认值                                | 说明                                   |\\n| :------------ | :--- | :------------------------------------------- | :------------------------------------ | :------------------------------------- |\\n| AUTH          | 否   | `string \\\\| boolean`                          | `true`                                | 权限校验                               |\\n| BASE_NAME     | 否   | `string`                                     | `\\\"/\\\"`                                 | 路由 跳转前缀                          |\\n| STORAGE       | 否   | `枚举类型：\\\"local\\\" \\\\| \\\"session\\\" \\\\| string`   | `session`                             | 本地存储使用                           |\\n| VERSION       | 否   | `string`                                     | 默认`package.json`中的`version`字段值 | 版本                                   |\\n| TOKEN_STORAGE | 否   | `枚举类型：\\\"local\\\" \\\\| \\\"session\\\" \\\\| \\\"cookie\\\"` | `session`                             | token 存储方式 默认与 `STORAGE` 值相同 |\\n| TOKEN_NAME    | 否   | `string`                                     | `token`                               | token 存储字段                         |\\n| SEARCH_MENU    | 否   | `string \\\\| boolean`                                     | `true`                               | 菜单搜索                     |\\n\\n```ts\\nimport config from \\\"@uiw-admin/config\\\"\\nexport default config({\\n  // ...\\n  define:{\\n    // ...\\n    SEARCH_MENU:true\\n  }\\n})\\n```\\n\\n\\n## alias\\n\\n配置别名，对引用路径进行映射。\\n\\n```ts\\nimport config from \\\"@uiw-admin/config\\\"\\nexport default config({\\n  alias: {\\n    foo: '/tmp/a/b/foo',\\n  },\\n  //  ...\\n})\\n```\\n\\n内置了以下别名：\\n\\n- `@`，项目 `src` 目录\\n- `@@`，临时目录，通常是 `src/.uiw` 目录\\n\\n## plugins 说明\\n\\n### PluginsType 类型\\n\\n```ts\\nexport type PluginsType = (\\n  | ((this: webpack.Compiler, compiler: webpack.Compiler) => void)\\n  | webpack.WebpackPluginInstance\\n  | [string, Record<string, any>]\\n  | string\\n)[];\\n```\\n\\n1. 使用的先行条件--插件需要默认导出是一个 class 类，符合`webpack` 的 `plugins`规范，\\n2. 一维数组时，直接把字符串当成包名进行加载，使用`require`进行引入后直接`new`\\n3. 二维数组时，直接把数组第一项当成包进行加载，使用`require`进行引入后`new`的时候把 第二项当成参数进行传递到包内部 \\n4. `webpack` 原始的 [`plugins`](https://webpack.docschina.org/concepts/plugins/#usage) 类型\\n\\n```ts\\nclass DemoWebpackPlugin {\\n  constructor(){\\n    // ...\\n  }\\n  apply(compiler: webpack.Compiler) {\\n    compiler.hooks.afterPlugins.tap(\\\"DemoWebpackPlugin\\\", () => {\\n      // ...\\n    })\\n  }\\n}\\n```\\n\\n## kktPlugins (~~旧loader~~) 参数\\n\\n### KKTPlugins 类型\\n\\n```ts\\nexport type KKTPlugins = (\\n  | ConfFun\\n  | {\\n    loader?: ConfFun;\\n    options?: LoaderConfOptions | undefined | Record<string, any>;\\n  }\\n  | string\\n  | [string, Record<string, any>]\\n)[]\\n```\\n\\n1. 使用的先行条件--需要默认导出是一个函数方法,返回类型为`webpack.Configuration `的函数\\n2. 一维数组时，直接把字符串当成包名进行加载，使用`require`进行引入后直接方法调用\\n3. 二维数组时，直接把数组第一项当成包进行加载，使用`require`进行引入后调用的时候把 第二项当成参数进行传递到包内部 \\n\\n```ts\\nexport default (conf: Configuration, env: string, options = {} as ReactLibraryOptions): Configuration => {\\n  conf.output = { ...conf.output, publicPath: './' };\\n  return conf\\n};\\n```\\n\\n## 配置案例\\n\\n⚠️ 注意：使用自定义 `plugins` 和 `loader` 时，请安装对应包。官方默认的 `@uiw-admin/plugins-**` 和 `loader` (`@kkt/*`) 不需要安装。\\n\\n### ~~旧的配置案例~~\\n\\n不推荐旧的配置案例，使用新的配置案例，它将变得更简单。\\n\\n```ts\\n\\nimport defaultConfig from \\\"@uiw-admin/config\\\"\\nimport { RematchWebpackPlugin, RoutesWebpackPlugin } from '@uiw-admin/plugins'\\nimport lessModules from '@kkt/less-modules'\\nimport rawModules from '@kkt/raw-modules'\\nimport scopePluginOptions from '@kkt/scope-plugin-options'\\nexport default defaultConfig({\\n  define: {\\n    VERSION: JSON.stringify(pkg.version),\\n    // BASE_NAME: \\\"/uiw\\\"\\n  },\\n  plugins: [new RematchWebpackPlugin(), new RoutesWebpackPlugin()],\\n  // publicPath: process.env.NODE_ENV === \\\"development\\\" ? \\\"/\\\" : \\\"/uiw/\\\",\\n  loader: [\\n    rawModules,\\n    { loader: scopePluginOptions, options: { allowedFiles: [path.resolve(process.cwd(), 'README.md')] } },\\n    lessModules\\n  ],\\n})\\n\\n```\\n\\n### 新配置案例（推荐）\\n\\n```ts\\nimport defaultConfig from \\\"@uiw-admin/config\\\"\\nexport default defaultConfig({\\n  define: {\\n    STORAGE: 'local',\\n  },\\n  plugins: [\\\"@uiw-admin/plugins-rematch\\\", \\\"@uiw-admin/plugins-routes\\\"],\\n  kktPlugins: [\\n    \\\"@kkt/raw-modules\\\",\\n    \\\"@kkt/less-modules\\\",\\n    [\\\"@kkt/scope-plugin-options\\\", { \\\"allowedFiles\\\": \\\"./README.md\\\" }],\\n  ],\\n})\\n```\\n\\n## 贡献者\\n\\n感谢所有的贡献者，欢迎开发者为开源项目贡献力量。\\n\\n<a href=\\\"https://github.com/uiwjs/uiw-admin/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n## License\\n\\nLicensed under the MIT License.\\n\";"],"names":[],"sourceRoot":""}