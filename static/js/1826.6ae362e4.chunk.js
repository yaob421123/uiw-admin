"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1826],{31826:function(n,e,t){t.r(e),e.default='# \u767b\u5f55\u9875\u9762\n\n[![npm version](https://img.shields.io/npm/v/@uiw-admin/user-login.svg?label=@uiw-admin/user-login)](https://www.npmjs.com/package/@uiw-admin/user-login)\n\n\u7b80\u5316\u9879\u76ee\u767b\u5f55\u9875\u9762\uff0c\u4e3a\u4e86\u591a\u9879\u76ee\u767b\u5f55\u9875\u9762\u4e0d\u7528\u91cd\u65b0\u6784\u5efa\u767b\u5f55\u9875\u9762\n\n## \u4f55\u65f6\u4f7f\u7528\n\n\u5728\u4e0d\u91cd\u65b0\u6784\u5efa\u767b\u5f55\u9875\u9762\u7684\u65f6\u5019\u4f7f\u7528\n\n## \u5b89\u88c5\n\n```bash\nnpm i @uiw-admin/user-login --save  # yarn add  @uiw-admin/user-login\n```\n\n## \u57fa\u672c\u4f7f\u7528\n\n`api`\uff1a\u767b\u5f55\u8bf7\u6c42\u63a5\u53e3\uff0c`onSuccess`\uff1a\u767b\u9646\u6210\u529f\u540e\u56de\u8c03\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { Notify } from "uiw"\nconst UserLayout = () => {\n  return (\n    <UserLogin\n      api="/api/login"\n      onSuccess={(data) => {\n        if (data && data.token) {\n          sessionStorage.setItem("token", data.token)\n          sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n        } else {\n         Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n        }\n      }}\n    />\n  )\n}\nReactDOM.render(<UserLayout />, _mount_);\n\n```\n\n## \u6dfb\u52a0\u989d\u5916\u8bf7\u6c42\u53c2\u6570\n\n`onBefore`\uff1a\u767b\u9646\u524d\u56de\u8c03\uff0c\u7528\u4e8e\u6dfb\u52a0\u989d\u5916\u8bf7\u6c42\u53c2\u6570\u3002\u5982\u679c\u8fd4\u56de `false`\uff0c \u5219\u4e0d\u8fdb\u884c\u767b\u5f55\u8bf7\u6c42\u64cd\u4f5c\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { Notify } from "uiw"\nconst UserLayout = () => {\n  return <UserLogin\n    api="/api/login"\n    onBefore={(value) => ({ a: 12, b: 1221 })}\n    // onBefore={(value) => false}\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\nReactDOM.render(<UserLayout />, _mount_);\n\n```\n\n## \u914d\u7f6e\u63a5\u53e3\u53c2\u6570\n\n`saveField`\uff1a\u914d\u7f6e\u767b\u9646\u53c2\u6570\u5b57\u6bb5\uff0c\u26a0\ufe0f \u6ce8\u610f\uff1aV6\u7248\u672c\u4e2d\u5220\u9664\u5f53\u524d\u5c5e\u6027\u3002\u5efa\u8bae\u4f7f\u7528`defaultFieldsConfig`\u5c5e\u6027\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\nconst UserLayout = () => {\n  return <UserLogin\n    api="/api/login"\n    // \u914d\u7f6e\u767b\u9646\u53c2\u6570\n    saveField={{\n      userName: "username",\n      passWord: "password"\n    }}\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u9ed8\u8ba4\u8f93\u5165\u6846\u5c5e\u6027\u914d\u7f6e\n\n`defaultFieldsConfig`\uff1a\u9ed8\u8ba4\u8f93\u5165\u6846\u5c5e\u6027\u914d\u7f6e\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\nconst UserLayout = () => {\n  return <UserLogin\n    api="/api/login"\n    defaultFieldsConfig={{\n      userName:{label:"\u624b\u673a\u53f7",name:"phone"},\n      passWord:{label:"\u5bc6\u7801"},\n    }}\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u9ed8\u8ba4\u767b\u5f55\u6309\u94ae\u5c5e\u6027\u914d\u7f6e\n\n`btnProps`\uff1a\u9ed8\u8ba4\u767b\u5f55\u6309\u94ae\u5c5e\u6027\u914d\u7f6e\uff0c\u81ea\u5b9a\u4e49\u7684\u6309\u94ae\u4e0d\u751f\u6548\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n    api="/api/login"\n    btnProps={{ type: "primary" }}\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u81ea\u5b9a\u4e49form\u8868\u5355\u9879\n\n`fields`\uff1a\u53ef\u8fdb\u884c\u81ea\u5b9a\u4e49form\u8868\u5355\u9879\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n   fields={[\n      {\n        name: "email",\n        label: "\u90ae\u7bb1",\n        labelFor: \'email\',\n        children: (\n          <input\n            id={"email"}\n            type="email"\n            placeholder={`\u8bf7\u8f93\u5165\u90ae\u7bb1`}\n            className="form-field"\n          />\n        ),\n      }\n     ]}\n    api="/api/login"\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u662f\u5426\u9700\u8981\u9ed8\u8ba4\u7684\u8f93\u5165\u6846\u6e32\u67d3\n\n`isDefaultFields`\uff1a\u662f\u5426\u9700\u8981\u9ed8\u8ba4\u7684\u8f93\u5165\u6846\u6e32\u67d3\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n   fields={[\n      {\n        name: "email",\n        label: "\u90ae\u7bb1",\n        labelFor: \'email\',\n        children: (\n          <input\n            id={"email"}\n            type="email"\n            placeholder={`\u8bf7\u8f93\u5165\u90ae\u7bb1`}\n            className="form-field"\n          />\n        ),\n      }\n     ]}\n    isDefaultFields={false}\n    api="/api/login"\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u4f7f\u7528\u914d\u7f6e\u6e32\u67d3\u64cd\u4f5c\u6309\u94ae\n\n`buttons`\uff1a\u53ef\u8fdb\u884c\u81ea\u5b9a\u4e49\u6309\u94ae\u914d\u7f6e,\u4ece\u800c\u505a\u66f4\u591a\u4e1a\u52a1\u62d3\u5c55(\u5982\u6ce8\u518c\u7b49)\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n   buttons={[\n       {\n         title: "\u767b\u5f55",\n         htmlType: "submit",\n       },\n       {\n         title: "\u6ce8\u518c",\n       },\n     ]}\n    api="/api/login"\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u81ea\u5b9a\u4e49\u80cc\u666f\u6837\u5f0f\n\n`styleContainer`\uff1a\u81ea\u5b9a\u4e49\u80cc\u666f\u6837\u5f0f \uff0c`bg`\uff1a\u53ef\u76f4\u63a5\u4fee\u6539\u80cc\u666f\u56fe\u7247\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n    styleContainer={{\n      background:"url(https://gimg2.baidu.com/image_search/src=http%3A%2F%2Ffile05.16sucai.com%2F2015%2F0615%2F0f9320e353671b9b02049dec80a7fde3.jpg&refer=http%3A%2F%2Ffile05.16sucai.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1648782265&t=8e140f1c56df1f31366698c0d695f36f)",\n    }}\n    api="/api/login"\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u81ea\u5b9a\u4e49\u80cc\u666f\u56fe\u7247\n\n`bg`\uff1a\u53ef\u76f4\u63a5\u4fee\u6539\u80cc\u666f\u56fe\u7247\uff0c\u26a0\ufe0f \u6ce8\u610f\uff1aV6\u7248\u672c\u4e2d\u5220\u9664\u5f53\u524d\u5c5e\u6027\u3002\u5efa\u8bae\u4f7f\u7528`styleContainer`\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n      bg="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fi-1-lanrentuku.qqxzb-img.com%2F2020%2F11%2F11%2Fef6f5575-ee2f-4113-b471-b8f0becf98c3.jpg%3FimageView2%2F2%2Fw%2F1024&refer=http%3A%2F%2Fi-1-lanrentuku.qqxzb-img.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1648782888&t=33ace74f48bd36f363b577158171abd1"\n    api="/api/login"\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n## \u81ea\u5b9a\u4e49\u9879\u76ee\u540d\u79f0\n\n`projectName`\uff1a\u81ea\u5b9a\u4e49\u9879\u76ee\u540d\u79f0\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\n\nconst UserLayout = () => {\n  return <UserLogin\n    projectName="\u9879\u76ee\u540d\u79f0"\n    api="/api/login"\n    onSuccess={(data) => {\n      if (data && data.token) {\n        sessionStorage.setItem("token", data.token)\n        sessionStorage.setItem("auth", JSON.stringify(data.authList || []))\n      } else {\n        Notify.error({ title: "\u9519\u8bef\u901a\u77e5", description: data.message || "\u8bf7\u6c42\u5931\u8d25" })\n      }\n    }}\n  />\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n\n## \u91cd\u5199\u767b\u5f55\u6846\u6e32\u67d3\n\n`children`\uff1a\u767b\u5f55\u6846\u8fdb\u884c\u91cd\u5199\n\n\x3c!--rehype:bgWhite=true&codeSandbox=true&codePen=true--\x3e\n```jsx\nimport React from \'react\';\nimport UserLogin from \'@uiw-admin/user-login\';\nimport { useNavigate, } from \'react-router-dom\';\nimport { Notify } from "uiw"\nimport { Form, Row, Col,Button } from \'uiw\';\nconst UserLayout = () => {\n  return <UserLogin>\n  <Form\n      resetOnSubmit={false}\n      onSubmit={({ current }) => {\n        const errorObj = {};\n        if (!current.username) errorObj.username = `\u8d26\u53f7\u4e0d\u80fd\u4e3a\u7a7a\uff01`;\n        if (!current.password) errorObj.password = `\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\uff01`;\n        if (Object.keys(errorObj).length > 0) {\n          const err = new Error();\n          err.filed = errorObj;\n          throw err;\n        } else {\n          setStore({ ...current});\n        }\n      }}\n      onSubmitError={(error) => {\n        if (error.filed) {\n          return { ...error.filed };\n        }\n        return null;\n      }}\n      fields={{\n        username: {\n          label: `\u8d26\u53f7`,\n          labelFor: \'username\',\n          children: (\n            <input\n              type="text"\n              id="username"\n              placeholder={`\u8bf7\u8f93\u5165\u8d26\u53f7`}\n              className="form-field"\n            />\n          ),\n        },\n        password: {\n          label: `\u5bc6\u7801`,\n          labelFor: \'password\',\n          children: (\n            <input\n              id="password"\n              type="password"\n              placeholder={`\u8bf7\u8f93\u5165\u5bc6\u7801`}\n              className="form-field"\n            />\n          ),\n        },\n      }}\n    >\n      {({ fields, canSubmit}) => {\n        return (\n          <div>\n            <Row>\n              <Col style={{ color: \'#555\' }}>{fields.username}</Col>\n            </Row>\n            <Row>\n              <Col style={{ color: \'#555\' }}>{fields.password}</Col>\n            </Row>\n            <Row>\n                <Button\n                  disabled={!canSubmit()}\n                  className="btns"\n                  block\n                  style={{ marginTop: 20 }}\n                  htmlType="submit"\n                  type="dark"\n                >\n                  \u767b\u5f55\n                </Button>\n            </Row>\n          </div>\n        );\n      }}\n    </Form>\n  \n  </UserLogin>\n}\n// export default UserLayout;\nReactDOM.render(<UserLayout />, _mount_);\n```\n\n\x3c!-- ## \u53c2\u6570\n\n```ts\n\ntype FormValue = { username?: string, password?: string }\n\nexport interface UserLoginProps {\n  /** \u5361\u7247\u6846\u7684\u4f4d\u7f6e */\n  align?: \'left\' | \'right\' | \'center\';\n  classNameWarp?: string;\n  styleWarp?: React.CSSProperties;\n  /** \u5361\u7247\u7684 className */\n  classNameBody?: string;\n  /** \u5361\u7247\u7684 style */\n  styleBody?: React.CSSProperties;\n  /** \u9875\u811a */\n  footer?: React.ReactNode;\n  /** \u80cc\u666f\u56fe\u7247 */\n  bg?: string;\n  /** \u5982\u679c\u5b58\u5728 children \u5219 \u8986\u76d6\u9ed8\u8ba4\u767b\u5f55\u6846\u91cc\u9762\u5185\u5bb9  */ \n  children?: React.ReactNode;\n  /** \u9879\u76ee\u540d\u79f0 */\n  projectName?: string;\n  /** \u767b\u5f55\u63a5\u53e3\u8fd4\u56de */\n  onSuccess?: (resp: any, form: FormValue | undefined) => void;\n  /** \u767b\u5f55\u6309\u94ae \u5c5e\u6027 */\n  btnProps?: Omit<ButtonProps, "ref">;\n  /** \u8bf7\u6c42\u63a5\u53e3 */\n  api?: string;\n  /** \u8c03\u7528\u63a5\u53e3\u4e4b\u524d , \u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6dfb\u52a0\u989d\u5916\u53c2\u6570  \u8fd4\u56de false \u5219\u4e0d\u8fdb\u884c\u767b\u5f55\u64cd\u4f5c  */\n  onBefore?: (store: FormValue) => { [s: string]: any } | boolean;\n  /** request \u8bf7\u6c42\u7684 options \u914d\u7f6e\u53c2\u6570 */\n  requestConfig?: Options;\n    /** \u767b\u5f55\u6309\u94ae\u4f4d\u7f6e \u6309\u94ae\u7ec4, title \u4e3a\u663e\u793a\u6807\u9898 */\n  buttons?: (Omit<ButtonProps, \'ref\'> & { title?: React.ReactNode })[]\n   /** \u9ed8\u8ba4\u8f93\u5165\u6846\u4fdd\u5b58\u5b57\u6bb5  */\n  saveField?: {\n    /** \u767b\u5f55\u8d26\u53f7 \u9ed8\u8ba4\u503c username*/\n    userName?: string,\n    /** \u5bc6\u7801 \u9ed8\u8ba4\u503c password */\n    passWord?: string\n  }\n}\n``` --\x3e\n\n## \u53c2\u6570\u8bf4\u660e\n\n| \u53c2\u6570                | \u5fc5\u586b | \u7c7b\u578b                                                                                      | \u9ed8\u8ba4\u503c                                      | \u8bf4\u660e                                                               |\n| ------------------- | ---- | ----------------------------------------------------------------------------------------- | ------------------------------------------- | ------------------------------------------------------------------ |\n| api                 | \u662f   | `string`                                                                                  |                                             | \u8bf7\u6c42\u63a5\u53e3                                                           |\n| align               | \u5426   | `\u679a\u4e3e\u7c7b\u578b\uff1a\'left\' \\| \'right\' \\| \'center\'`                                                 | `center`                                    | \u5361\u7247\u6846\u7684\u4f4d\u7f6e                                                       |\n| footer              | \u5426   | `React.ReactNode`                                                                         |          `true`                                   | \u9875\u811a                                                               |\n| bg                  | \u5426   | `string`                                                                                  |                                             | \u9875\u9762\u80cc\u666f\u56fe\uff0c\u53ef\u4ee5`require(\'./image.png\')`\u6216\u8005\u662f\u56fe\u7247\u94fe\u63a5             |\n| logo                | \u5426   | `string \\|\'\'`                                                                             |                                             | logo\u5934\u50cf, \u503c\u4e3a`null` \u4e0d\u663e\u793alogo                                    |\n| children            | \u5426   | `React.ReactNode`                                                                         |                                             | \u66ff\u6362\u5361\u7247\u4f4d\u7f6e\u5185\u5bb9                                                   |\n| projectName         | \u5426   | `string\\|null`                                                                            | `UIW Admin`                                 | \u9879\u76ee\u540d\u79f0(\u9875\u9762\u6807\u9898)  \u5982\u679c\u503c\u4e3a`null`  \u4e0d\u663e\u793a\u6807\u9898                     |\n| btnProps            | \u5426   | `Omit<ButtonProps, \'ref\'>`                                                                | `{}`                                        | \u767b\u5f55\u6309\u94ae \u5c5e\u6027                                                      |\n| buttons             | \u5426   | `(Omit<ButtonProps, \'ref\'> & { title?: React.ReactNode })[]`                              |                                             | \u767b\u5f55\u6309\u94ae\u4f4d\u7f6e\u7684\u81ea\u5b9a\u4e49\u6309\u94ae\u7ec4, title \u4e3a\u663e\u793a\u6807\u9898                       |\n| onSuccess           | \u662f   | `(resp: any, form: (FormValue \\| undefined)) => void`                                     | `()=>null`                                  | \u767b\u5f55\u63a5\u53e3\u8fd4\u56de                                                       |\n| onBefore            | \u5426   | `(store: FormValue) => (Record<string, any> \\| boolean)`                                  |                                             | \u7528\u63a5\u53e3\u4e4b\u524d , \u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6dfb\u52a0\u989d\u5916\u53c2\u6570  \u8fd4\u56de false \u5219\u4e0d\u8fdb\u884c\u767b\u5f55\u64cd\u4f5c |\n| requestConfig       | \u5426   | `Options`                                                                                 |                                             | `request` \u8bf7\u6c42 `options` \u914d\u7f6e\u53c2\u6570                                  |\n| saveField           | \u5426   | `{userName(\u767b\u5f55\u8d26\u53f7\u5b57\u6bb5)?:string,passWord(\u5bc6\u7801\u5b57\u6bb5)?:string}`                             | `{userName:"username",passWord:"password"}` | \u9ed8\u8ba4\u8f93\u5165\u6846\u4fdd\u5b58\u5b57\u6bb5                                                 |\n| defaultFieldsConfig | \u5426   | `{userName(\u8d26\u6237\u8f93\u5165\u6846)?:Partial<FieldsProps>,passWord(\u5bc6\u7801\u8f93\u5165\u6846)?:Partial<FieldsProps>}` |                                             | \u9ed8\u8ba4\u8f93\u5165\u6846\u4fdd\u5b58\u5b57\u6bb5                                                 |\n| fields              | \u5426   | `FieldsProps[]`                                                                           |                                             | \u81ea\u5b9a\u4e49form\u8868\u5355\u9879                                                   |\n| isDefaultFields     | \u5426   | `boolean`                                                                                 | `true`                                      | \u662f\u5426\u9700\u8981\u9ed8\u8ba4\u7684\u8f93\u5165\u6846\u6e32\u67d3                                           |\n| classNameWarp       | \u5426   | `string`                                                                                  |                                             | \u5361\u7247\u6846\u5916\u5c42`className`                                              |\n| styleWarp           | \u5426   | `React.CSSProperties`                                                                     |                                             | \u5361\u7247\u6846\u5916\u5c42`style`                                                  |\n| classNameBody       | \u5426   | `string`                                                                                  |                                             | \u5361\u7247\u6846`className`                                                  | \u2014 |\n| styleBody           | \u5426   | `React.CSSProperties`                                                                     |                                             | \u5361\u7247\u6846`style`                                                      |\n| styleContainer      | \u5426   | `React.CSSProperties`                                                                     |                                             | \u80cc\u666f\u6846`style` \u53ef\u518d\u6b21\u8c03\u6574\u80cc\u666f\u56fe\u6837\u5f0f                                 |\n\n```tsx\nexport interface FieldsProps<T = any> extends FormFieldsProps<T> {\n  /** \u4fdd\u5b58\u5b57\u6bb5 */ \n  name: string;\n  // \u9a8c\u8bc1\u8f93\u5165\u6846\u503c   value:\u8f93\u5165\u6846\u7684\u503c\uff0ccurrent\uff1a\u5f53\u524d\u8868\u5355\u7684\u503c\uff0c\u8fd4\u56de\u503c\u4e3a string \u7c7b\u578b\u65f6\uff0c\u8fdb\u884c\u62a5\u9519\u63d0\u793a\n  verification?: (value: any, current: Record<string, any>) => string | boolean | null,\n}\n```\n\n## \u8d21\u732e\u8005\n\n\u611f\u8c22\u6240\u6709\u7684\u8d21\u732e\u8005\uff0c\u6b22\u8fce\u5f00\u53d1\u8005\u4e3a\u5f00\u6e90\u9879\u76ee\u8d21\u732e\u529b\u91cf\u3002\n\n<a href="https://github.com/uiwjs/uiw-admin/graphs/contributors">\n  <img src="https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg" />\n</a>\n\n## License\n\nLicensed under the MIT License.\n'}}]);
//# sourceMappingURL=1826.6ae362e4.chunk.js.map