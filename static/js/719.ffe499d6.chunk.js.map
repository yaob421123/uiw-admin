{"version":3,"file":"static/js/719.ffe499d6.chunk.js","mappings":"+GAAA,szE","sources":["pages/mocker/README.md"],"sourcesContent":["export default \"# mocker\\n\\n为了方便前期前端快速开发，不需要等待后端接口，系统提供了mock功能。更多配置请参考[mocker-api](https://github.com/jaywcjlove/mocker-api)\\n\\n## 编写mock\\n\\n> 在/mocker/index目录下进行mock数据编写，比如：\\n\\n```ts\\nconst { delay } = require('mocker-api');\\nconst noProxy = process.env.NO_PROXY === 'true';\\n\\nconst proxy = {\\n 'GET /api/user/list': [\\n    {\\n      id: 1,\\n      username: 'kenny',\\n      sex: 6\\n    }, {\\n      id: 2,\\n      username: 'kenny',\\n      sex: 6\\n    }\\n  ],\\n   'POST /api/login/account': (req, res) => {\\n    const { password, username } = req.body;\\n    if (password === '888888' && username === 'admin') {\\n      return res.json({\\n        status: 'ok',\\n        code: 0,\\n        token: \\\"sdfsdfsdfdsf\\\",\\n        data: {\\n          id: 1,\\n          username: 'kenny',\\n          sex: 6\\n        }\\n      });\\n    } else {\\n      return res.status(403).json({\\n        status: 'error',\\n        code: 403\\n      });\\n    }\\n  },\\n}\\nmodule.exports = (noProxy ? {} : delay(proxy, 1000));\\n```\\n\\n## 调用\\n\\n> 配合系统封装的request进行mock数据请求。如需区分是mock数据，还是真实后端数据，调用真实数据时,注释mocker数据配置即可\\n\\n```ts\\n  import { request } from \\\"@uiw-admin/utils\\\"\\n\\n  export const selectById  = (params:{id:string}) => request(\\\"/api/login/account\\\",{ method:\\\"POST\\\",body: { ...params } }) \\n```\\n\\n注：mock功能只推荐在开发模式下开启。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n## 贡献者\\n\\n感谢所有的贡献者，欢迎开发者为开源项目贡献力量。\\n\\n<a href=\\\"https://github.com/uiwjs/uiw-admin/graphs/contributors\\\">\\n  <img src=\\\"https://uiwjs.github.io/uiw-admin/CONTRIBUTORS.svg\\\" />\\n</a>\\n\\n## License\\n\\nLicensed under the MIT License.\\n\";"],"names":[],"sourceRoot":""}